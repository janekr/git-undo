#!/bin/sh

VERSION="0.1.0"
PROGRAM=${0##*/}
dir=$(d=$0; [ -L "$d" ] && d=$(readlink -f "$d"); dirname "$d")
undo=$dir/git-undo.awk
usage="Usage: $PROGRAM [options]

-f|--fix		attempt to fix
"

if [ ! -x /usr/bin/getopt ]; then
	echo >&2 "You need to install util-linux to use git-undo"
	exit 1
fi

t=$(getopt -o hfV --long help,version,fix -n "$PROGRAM" -- "$@") || exit $?
eval set -- "$t"

while :; do
	case "$1" in
	-h|--help)
		echo 2>&1 "$usage"
		exit 1
	;;
	-f|--fix)
		export RUN_FIX=1
	;;
	-V|--version)
		echo "$VERSION"
		exit 0
		;;
	--)
		shift
		break
	;;
	*)
		echo >&2 "$PROGRAM: Internal error: \`$1' not recognized!"
		exit 1
		;;
	esac
	shift
done

awk=gawk

if [ $# -eq 0 ]; then
	LC_ALL=en_US.UTF-8 $awk -f $undo 3>/dev/null
	retcode=$?
else
	out=$(LC_ALL=en_US.UTF-8 echo "$@" | $awk -f $undo 3>&1 >/dev/null 2>/dev/null)
	retcode=$?
	oldIFS="$IFS"
	IFS="|"
	set -- $out
	IFS="$oldIFS"
	while :; do
		[ $# -eq 0 ] && break
		case "$1" in
		INFO)
			info="$2"
			shift
			;;
		UNDO)
			if [ "$2" = "1" ]; then
				undocmd="No undo command necessary"
			elif [ "$2" = "2" ]; then
				undocmd="No undo command known"
			else
				undocmd="$2"
			fi
			shift
			;;
		ERROR)
			echo "I didn't recognize that command"
			;;
		*)
			;;
		esac
		shift
	done
	[ -n "$info" ] && echo $info
	[ -n "$undocmd" ] && echo $undocmd
fi
exit $retcode
